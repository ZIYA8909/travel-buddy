{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arnav\\\\Desktop\\\\Coding\\\\Projects\\\\travel-buddy\\\\frontend\\\\src\\\\pages\\\\CitySelect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CitySelect() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [loading, setLoading] = useState(true); // To show a loading message\n  const [error, setError] = useState(''); // To show any errors\n  const navigate = useNavigate();\n  useEffect(() => {\n    API.get('/api/universities/cities').then(res => {\n      setCities(res.data);\n    }).catch(() => {\n      setError('Could not load cities. Please try again later.');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-select-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: \"Select a City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-subtitle\",\n        children: \"Choose a city to see universities and plan your trip.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading cities...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-grid\",\n      children: cities.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"city-card\",\n        onClick: () => navigate(`/city/${c.id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"city-name\",\n          children: c.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"city-state\",\n          children: c.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(CitySelect, \"uUrlHrsQAEd6DBiVsgdr/jXRZ08=\", false, function () {\n  return [useNavigate];\n});\n_c = CitySelect;\nvar _c;\n$RefreshReg$(_c, \"CitySelect\");","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","jsxDEV","_jsxDEV","CitySelect","_s","cities","setCities","loading","setLoading","error","setError","navigate","get","then","res","data","catch","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","onClick","id","name","state","_c","$RefreshReg$"],"sources":["C:/Users/arnav/Desktop/Coding/Projects/travel-buddy/frontend/src/pages/CitySelect.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CitySelect() {\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(true); // To show a loading message\r\n    const [error, setError] = useState('');     // To show any errors\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        API.get('/api/universities/cities')\r\n            .then(res => {\r\n                setCities(res.data);\r\n            })\r\n            .catch(() => {\r\n                setError('Could not load cities. Please try again later.');\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n    return (\r\n        <div className=\"city-select-page\">\r\n            <div className=\"header-card\">\r\n                <h2 className=\"card-title\">Select a City</h2>\r\n                <p className=\"card-subtitle\">Choose a city to see universities and plan your trip.</p>\r\n            </div>\r\n\r\n            {/* Show loading message */}\r\n            {loading && <p className=\"loading-message\">Loading cities...</p>}\r\n\r\n            {/* Show error message */}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* Show city grid if not loading and no errors */}\r\n            {!loading && !error && (\r\n                <div className=\"city-grid\">\r\n                    {cities.map(c => (\r\n                        <button key={c.id} className=\"city-card\" onClick={() => navigate(`/city/${c.id}`)}>\r\n                            <span className=\"city-name\">{c.name}</span>\r\n                            <span className=\"city-state\">{c.state}</span>\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}